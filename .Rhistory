#     2nd-half AUC
# calculate timeEarnings
timeEarnings = getTimeEarnings(thisTrialData, tGrid, label, plotTimeEarnings)
if(bkIdx == 1) cumEarn[,sIdx * 2 -1] = timeEarnings else cumEarn[,sIdx * 2] = timeEarnings
plotData = data.frame(trialNum = thisTrialData$trialNum,
cumEarnings = cumsum(thisTrialData$trialEarnings))
if(plotTrialEarnings){
p = ggplot(plotData, aes(trialNum, cumEarnings)) + geom_line()
print(p)
}
# wait for input before continuing, if individual plots were requested
if (any(plotScheduledDelays, plotTrialwiseData, plotKMSC, plotRT, plotWTW, plotTimeEarnings, plotTrialEarnings)) {
readline(prompt = paste('subject',thisID, "block", bkIdx, '(hit ENTER to continue)'))
graphics.off()
}
} # loop over blocks
}
# organize groupdata
groupData = data.frame(id = rep(allIDs, each = 2), blockNum = rep(c(1,2), n),
cbal = rep(hdrData$Cbal, each = 2), condition = factor(condByBlock, levels = c('HP', 'LP')),
trialFun = FunctionByBlock, AUC = grpAUC,
totalEarnings = earningsByBlock)
ggplot(groupData[groupData$condition == 'LP',], aes(AUC, totalEarnings)) + geom_point() +
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
hist(groupData[groupData$condition == 'LP', AUC])
hist(groupData[groupData$condition == 'LP', 'AUC'])
AUCLP = groupData$AUC[groupData$condition == 'LP']
fit = lm(earningsLP ~ AUCLP)
summary(fit)
ggplot(groupData[groupData$condition == 'LP',], aes(AUC, totalEarnings)) + geom_point() +
saveTheme + ylab('Total earnings') + xlab("AUC") + geom_line()
ggplot(groupData[groupData$condition == 'LP',], aes(AUC, totalEarnings)) + geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
ggplot(groupData[groupData$condition == 'LP',], aes(AUC, totalEarnings)) + geom_point()
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
##### plot aucLP & totalEarnings
ggplot(groupData[groupData$condition == 'LP',], aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(earningsLP, AUCLP)
cut(plotData$AUCLP, 2)
cut(plotData$AUCLP, breaks = 15)
cut(plotData$AUCLP, c(0, 15, 32))
plotData$binary = cut(plotData$AUCLP, c(0, 15, 32))
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings, AUC)
plotData$binary = cut(plotData$AUCLP, c(0, 15, 32))
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUCLP, c(0, 15, 32))
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUCLP, c(0, 15, 32))
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
ggsave(fileName, width = 6, height = 4)
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary)
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary)
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary)
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary) + saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
fit = lm(earningsLP[AUCLP > 15] ~ AUCLP[AUCLP > 15])
summary(fit)
fit = lm(earningsLP[AUCLP <= 15] ~ AUCLP[AUCLP <= 15])
summary(fit)
plotData$cate = cut(plotData$AUC, 10)
summarise(group_by(plotData, cate), meanEarnigs = mean(totalEarnings))
plotData$cate = cut(plotData$AUC, 15
summarise(group_by(plotData, cate), meanEarnigs = mean(totalEarnings))
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
plotData$cate = cut(plotData$AUC, 15)
summarise(group_by(plotData, cate), meanEarnigs = mean(totalEarnings))
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
plotData
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
plotData$cate = cut(plotData$AUC, seq(0, 32, by = 2))
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
plotData
plotData$cate = cut(plotData$AUC, seq(0, 32, by = 1.5))
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
plotData$cate = cut(plotData$AUC, seq(0, 32, by = 1.5))
summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
plotData$cate = cut(plotData$AUC, seq(0, 32, by = 2))
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(totalEarnings)) + geom_histogram()
ggplot(plotData, aes(cate, totalEarnings)) + geom_bar(stat = 'identity')
ggplot(plotData, aes(cate, totalEarnings)) + geom_point()
plotData
ggplot(plotData, aes(cate, totalEarnings)) + geom_point()
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + saveTheme
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + dispTheme
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + showTheme
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + displayTheme
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + displayTheme
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 12, height = 8)
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + saveTheme +
theme(axis.text.x = element_text(angle = 90))
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 12, height = 8)
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + saveTheme +
theme(axis.text.x = element_text(angle = 90))
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('total Earnings') + xlab('AUC interval / s') + displayTheme +
theme(axis.text.x = element_text(angle = 45))
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP histogram, 15 bins
plotData = summarise(group_by(plotData, cate), totalEarnings = mean(totalEarnings))
ggplot(plotData, aes(cate, totalEarnings)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') + displayTheme +
theme(axis.text.x = element_text(angle = 45))
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
timings$LP
plotData = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData
sd(totalEarnings)
sd(c(1,2))
sd(1)
View(plotData)
##### plot aucLP & totalEarnings
# prepare plotData
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
plotData$cate = cut(plotData$AUC, seq(0, 32, by = 2))
# AUCLP_EarningsLP together
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary) + saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP together, splited at 15
ggplot(, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP histogram, 15 bins
plotData2 = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
##### plot aucLP & totalEarnings
# prepare plotData
earningsLP = groupData$totalEarnings[groupData$condition == 'LP']
AUCLP = groupData$AUC[groupData$condition == 'LP']
plotData = data.frame(totalEarnings = earningsLP, AUC = AUCLP)
plotData$binary = cut(plotData$AUC, c(0, 15, 32))
plotData$cate = cut(plotData$AUC, seq(0, 32, by = 2))
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary) + saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
# AUCLP_EarningsLP together, splited at 15
ggplot(, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP together
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary) + saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP together, splited at 15
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) +
saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
# AUCLP_EarningsLP together
ggplot(plotData, aes(AUC, totalEarnings)) + geom_point() +
geom_smooth(method = lm, se = T) + facet_wrap(~binary) + saveTheme + ylab('Total earnings') + xlab("AUC")
fileName = file.path(outFile, "AUCLP_earningsLP.pdf")
ggsave(fileName, width = 6, height = 4)
plotData2 = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData2
plotData2 = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cate, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
plotData2 = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cate, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues))
plotData2$cateMean = seq(1, 31, by =2)
seq(1, 31, by =2)
length(seq(1, 31, by =2))
plotData2$cateMean
nrow(plotData2)
plotData2 = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
View(plotData2)
plotData2 = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
AUC = vector(NA, length(cateMean)),
totalEarnings = vector(NA, length(cateMean)))
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
AUC = vector(NA, 16),
totalEarnings = vector(NA, 16))
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
AUC = rep(NA, 16),
totalEarnings = rep(NA, 16))
tempt
levels(tempt$cate)
tempt$cate
which(tempt$cate == levels(tempt$cate))
which(tempt$cate[1] == levels(tempt$cate))
which( levels(tempt$cate) %in% tempt$cate[1])
which( levels(tempt$cate) %in% tempt$cate)
length(which( levels(tempt$cate) %in% tempt$cate))
which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
tempt$cateMean = which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
tempt$cateMean = which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValus= rep(NA, 16),
stdValus = rep(NA, 16))
plotData2$AUC[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues[plotData2$cateMean %in% tempt$cateMean]
plotData2$meanValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues[plotData2$cateMean %in% tempt$cateMean]
plotData2$stdValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues[plotData2$cateMean %in% tempt$cateMean]
View(plotData2)
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValus= rep(NA, 16),
stdValus = rep(NA, 16))
plotData2$meanValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues[plotData2$cateMean %in% tempt$cateMean]
plotData2$stdValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues[plotData2$cateMean %in% tempt$cateMean]
View(plotData2)
plotData2$cateMean %in% tempt$cateMean
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
tempt$cateMean = which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValus= rep(NA, 16),
stdValus = rep(NA, 16))
plotData2$meanValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues
plotData2$stdValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValus= rep(NA, 16),
stdValus = rep(NA, 16))
plotData2$meanValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues
plotData2$stdValus[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues
View(plotData2)
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
plotData2$meanValues - plotData2$stdValues
plotData2$meanValues
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValues= rep(NA, 16),
stdValues = rep(NA, 16))
plotData2$meanValues[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues
plotData2$stdValues[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cate, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggplot(plotData2, aes(cate, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45))
ggplot(plotData2, aes(cateMean, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45))
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
tempt$cateMean = which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValues= rep(0, 16),
stdValues = rep(NA, 16))
plotData2$meanValues[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues
plotData2$stdValues[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cateMean, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45))
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
tempt$cateMean = which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
plotData2 = data.frame(cateMean = seq(1, 31, by = 2),
meanValues= rep(350, 16),
stdValues = rep(NA, 16))
plotData2$meanValues[plotData2$cateMean %in% tempt$cateMean] =
tempt$meanValues
plotData2$stdValues[plotData2$cateMean %in% tempt$cateMean] =
tempt$stdValues
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cateMean, meanValues)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45))
which( levels(tempt$cate) !%in% tempt$cate) * 2 - 1
which( !levels(tempt$cate) %in% tempt$cate) * 2 - 1
tempt = summarise(group_by(plotData, cate), meanValues = mean(totalEarnings),
stdValues = sd(totalEarnings))
tempt$cateMean = which( levels(tempt$cate) %in% tempt$cate) * 2 - 1
leftCateMean = which( !levels(tempt$cate) %in% tempt$cate) * 2 - 1
plotData2 = data.frame(meanValues = c(tempt$meanValues, rep(350, length(leftCateMean))),
stdValues = c(tempt$stdValues, rep(NA, length(leftCateMean))),
cateMean = c(tempt$cateMean,leftCateMean),
condiion = c(rep('data', length(tempt$cateMean)),
rep('missing', length(leftCateMean))))
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues))
plotData2 = data.frame(meanValues = c(tempt$meanValues, rep(350, length(leftCateMean))),
stdValues = c(tempt$stdValues, rep(NA, length(leftCateMean))),
cateMean = c(tempt$cateMean,leftCateMean),
condition = c(rep('data', length(tempt$cateMean)),
rep('missing', length(leftCateMean))))
plotData2$minValues = plotData2$meanValues - plotData2$stdValues
plotData2$maxValues = plotData2$meanValues + plotData2$stdValues
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s')
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(c('black', 'red'))
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c('black', 'red'))
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c('black', 'red')) +
geom_vline(xintercept = timings$LP, linetype = 2)
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c('black', 'red')) +
geom_vline(xintercept = timings$LP, linetype = 2, color = "#bababa")
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c('black', 'red')) +
geom_vline(xintercept = timings$LP, linetype = 2, color = "grey")
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
ggplot(plotData2, aes(cateMean, meanValues, color = condition)) + geom_point() +
ylab('Total earnings') + xlab('AUC interval / s') +
geom_errorbar(aes(ymax= maxValues, ymin = minValues)) +
displayTheme + theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c('black', 'red')) +
geom_vline(xintercept = timings$LP, linetype = 2, color = "#404040")
fileName = file.path(outFile, "AUCLP_earningsLP_bin.pdf")
ggsave(fileName, width = 6, height = 4)
tempt
which(colpLPData$AUC <= 6 & colpLPData$AUC >= 2)
i = 19
j = 3
totalEarnings = sum(rawLPData$trialEarnings[i,j,])
wtw = colpLPData$wtw[i]
AUC = colpLPData$AUC[i]
label = sprintf('earn: %d, wtw: %.2f, AUC: %.2f',
totalEarnings, wtw, AUC)
blockData = data.frame(trialEarnings = rawLPData$trialEarnings[i,j,],
scheduledWait = rawLPData$rewardDelays[i,j,],
timeWaited = rawLPData$timeWaited[i,j,],
trialNum = 1 : length(rawLPData$timeWaited[i,j,])
)
endTick = match(0, rawLPData$rewardDelays[i,j,]) - 1
blockData = blockData[1:endTick, ]
trialPlots(blockData, label)
i = 19
j = 3
totalEarnings = sum(rawLPData$trialEarnings[i,j,])
load('QStarData/rawdata.RData')
load('QStarData/rawdata.RData')
load('QStarData/rawdata.RData')
load('QStarData/colpData.RData')
####
#
source('helperFxs.R')
####
which(colpLPData$AUC <= 6 & colpLPData$AUC >= 2)
#  19  21  46  47  48  74 100 202 229 230 231
i = 19
j = 3
totalEarnings = sum(rawLPData$trialEarnings[i,j,])
wtw = colpLPData$wtw[i]
AUC = colpLPData$AUC[i]
label = sprintf('earn: %d, wtw: %.2f, AUC: %.2f',
totalEarnings, wtw, AUC)
blockData = data.frame(trialEarnings = rawLPData$trialEarnings[i,j,],
scheduledWait = rawLPData$rewardDelays[i,j,],
timeWaited = rawLPData$timeWaited[i,j,],
trialNum = 1 : length(rawLPData$timeWaited[i,j,])
)
endTick = match(0, rawLPData$rewardDelays[i,j,]) - 1
blockData = blockData[1:endTick, ]
trialPlots(blockData, label)
